plugins {
    id 'java'
    id 'org.springframework.boot' version '2.5.14'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'org.dargor'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = "VERSION_11"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2020.0.5")
}

dependencies {
    implementation(
            'org.springframework.boot:spring-boot-starter-validation',
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.springframework.boot:spring-boot-starter-actuator',
            'org.springframework.cloud:spring-cloud-starter-config',
            'org.springframework.cloud:spring-cloud-starter-openfeign',
            'org.springframework.cloud:spring-cloud-config-client',
            'org.springframework.cloud:spring-cloud-starter-bootstrap',
            'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client',
            'org.mapstruct:mapstruct:1.5.5.Final'
    )


    compileOnly(
            'org.springframework.cloud:spring-cloud-starter-sleuth',
            'org.projectlombok:lombok',
            'com.h2database:h2',
            'org.apache.maven.plugins:maven-pmd-plugin:3.21.0'
    )

    annotationProcessor(
            'org.mapstruct:mapstruct-processor:1.5.5.Final',
            'org.springframework.boot:spring-boot-configuration-processor',
            'org.projectlombok:lombok-mapstruct-binding:0.2.0',
            'org.projectlombok:lombok'
    )

    testImplementation(
            'org.springframework.boot:spring-boot-starter-test',
            'junit:junit-dep:4.11'

    )

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

jar {
    enabled = false
    manifest {
        attributes(
                'Main-Class': 'org.dargor.customer.CustomersMsApplication'
        )
    }
}

bootJar {
    enabled = true
}
tasks.named('test') {
    useJUnitPlatform()
}
